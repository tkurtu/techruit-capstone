{"ast":null,"code":"import _defineProperty from \"/Users/Tasneem/Desktop/techruit-final-project/front-end/techruit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Tasneem/Desktop/techruit-final-project/front-end/techruit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Tasneem/Desktop/techruit-final-project/front-end/techruit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Tasneem/Desktop/techruit-final-project/front-end/techruit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Tasneem/Desktop/techruit-final-project/front-end/techruit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Tasneem/Desktop/techruit-final-project/front-end/techruit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Tasneem/Desktop/techruit-final-project/front-end/techruit/src/components/Freelancers/FreelanceProfile.jsx\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport avatarImage from '../Recruiters/ProfileModal/grey-image.jpg';\n\nvar FreelanceProfile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FreelanceProfile, _React$Component);\n\n  function FreelanceProfile() {\n    _classCallCheck(this, FreelanceProfile);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FreelanceProfile).apply(this, arguments));\n  }\n\n  _createClass(FreelanceProfile, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this,\n          _React$createElement;\n\n      var classes = this.props.classes;\n      console.log(this.props.freelancers);\n      var currentFreelancer = this.props.freelancers.filter(function (freelancer) {\n        return freelancer.id === _this.props.match.params.id;\n      });\n      console.log(currentFreelancer[0]);\n      var freelancer = currentFreelancer[0];\n      return React.createElement(\"div\", {\n        className: classes.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Avatar, (_React$createElement = {\n        className: classes.avatar,\n        alt: \"avatar goes here\",\n        src: avatarImage\n      }, _defineProperty(_React$createElement, \"className\", classes.avatar), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement))), React.createElement(\"div\", {\n        className: classes.width,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.title,\n        variant: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, freelancer.name), React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        className: classes.cardinfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"contact:\"), freelancer.email, React.createElement(Typography, {\n        variant: \"h5\",\n        className: classes.cardinfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"about me:\"), freelancer.description), React.createElement(Button, {\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"reach out to \", freelancer.name)));\n    }\n  }]);\n\n  return FreelanceProfile;\n}(React.Component);\n\nvar styles = function styles(themes) {\n  return {\n    wrapper: {\n      display: 'flex'\n    },\n    title: {\n      color: themes.palette.secondary.dark,\n      padding: 30\n    },\n    cardinfo: {\n      fontWeight: 400,\n      color: themes.palette.primary.main\n    },\n    button: {\n      backgroundColor: themes.palette.primary.main,\n      color: 'white',\n      width: 300\n    },\n    // card mobile: {\n    //   padding: 50px 20px;\n    //   margin-bottom: 20px;\n    // },\n    avatar: {\n      margin: '0px auto',\n      height: 200,\n      width: 200\n    }\n  };\n};\n\nexport default withStyles(styles)(FreelanceProfile);","map":{"version":3,"sources":["/Users/Tasneem/Desktop/techruit-final-project/front-end/techruit/src/components/Freelancers/FreelanceProfile.jsx"],"names":["React","Typography","withStyles","Card","Paper","Button","Avatar","avatarImage","FreelanceProfile","classes","props","console","log","freelancers","currentFreelancer","filter","freelancer","id","match","params","wrapper","avatar","width","title","name","card","cardinfo","email","description","button","Component","styles","themes","display","color","palette","secondary","dark","padding","fontWeight","primary","main","backgroundColor","margin","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport avatarImage from '../Recruiters/ProfileModal/grey-image.jpg';\n\n\nclass FreelanceProfile extends React.Component {\n  render() {\n    const { classes } = this.props;\n    console.log(this.props.freelancers)\n    const currentFreelancer = this.props.freelancers.filter(freelancer => {\n      return freelancer.id === this.props.match.params.id\n    });\n    console.log(currentFreelancer[0]);\n    const freelancer = currentFreelancer[0];\n\n    return (\n      <div className={classes.wrapper}>\n      <div>\n      <Avatar\n          className={classes.avatar}\n          alt=\"avatar goes here\"\n          src={avatarImage}\n          className={classes.avatar} />\n      </div>\n        <div className={classes.width}>\n          <Typography className={classes.title} variant=\"h3\">{freelancer.name}</Typography>\n          <Card className={classes.card}>\n            <Typography variant=\"h5\" className={classes.cardinfo}>\n              contact:\n            </Typography>\n            {freelancer.email}\n            <Typography variant=\"h5\" className={classes.cardinfo}>\n              about me:\n            </Typography>\n            {freelancer.description}\n          </Card>\n          <Button className={classes.button}>\n            reach out to {freelancer.name}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = themes => ({\n  wrapper: {\n    display: 'flex',\n  },\n\n  title: {\n    color: themes.palette.secondary.dark,\n    padding: 30\n  },\n\n  cardinfo: {\n    fontWeight: 400,\n    color: themes.palette.primary.main,\n  },\n\n  button: {\n    backgroundColor: themes.palette.primary.main,\n    color: 'white',\n    width: 300,\n  },\n\n  // card mobile: {\n  //   padding: 50px 20px;\n  //   margin-bottom: 20px;\n  // },\n\n  avatar: {\n    margin: '0px auto',\n    height: 200,\n    width: 200,\n  },\n\n})\n\n\nexport default withStyles(styles)(FreelanceProfile);\n"]},"metadata":{},"sourceType":"module"}